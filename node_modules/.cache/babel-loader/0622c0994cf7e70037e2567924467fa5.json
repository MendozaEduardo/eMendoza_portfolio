{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = responsiveStyleModifierPropTypes;\n\nvar _isResponsiveModifiersProp = _interopRequireDefault(require(\"./utils/isResponsiveModifiersProp\"));\n\nvar _styleModifierPropTypes = require(\"./styleModifierPropTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * TODO: (DEPRECATED) The functionality provided here is now incorporated into\n * `styleModifierPropTypes`. This should be removed before the v2 release.\n */\n\n/**\n * Evaluates the modifiers prop against the modifier config. Throws invalid proptype error\n * if a modifier is supplied in prop and not found in modifier config.\n * @export\n * @param {ModifiersConfig} modifierConfig\n * @returns {Validator<ModifierKeys>}\n */\n\n\nfunction responsiveStyleModifierPropTypes(modifierConfig) {\n  var validator = function validator(props, propName, componentName) {\n    var responsiveModifiers = props[propName];\n\n    if ((0, _isResponsiveModifiersProp.default)(responsiveModifiers)) {\n      return (0, _styleModifierPropTypes.validateResponsiveModifiers)(propName, componentName, responsiveModifiers, modifierConfig);\n    }\n\n    return null;\n  };\n\n  return validator;\n}","map":{"version":3,"sources":["/Users/eduardo.mendoza/Desktop/GitHub/eMendoza_portfolio/node_modules/styled-components-modifiers/lib/responsiveStyleModifierPropTypes.js"],"names":["Object","defineProperty","exports","value","default","responsiveStyleModifierPropTypes","_isResponsiveModifiersProp","_interopRequireDefault","require","_styleModifierPropTypes","obj","__esModule","modifierConfig","validator","props","propName","componentName","responsiveModifiers","validateResponsiveModifiers"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,gCAAlB;;AAEA,IAAIC,0BAA0B,GAAGC,sBAAsB,CAACC,OAAO,CAAC,mCAAD,CAAR,CAAvD;;AAEA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEN,IAAAA,OAAO,EAAEM;AAAX,GAArC;AAAwD;AAE/F;;;;;AAKA;;;;;;;;;AAOA,SAASL,gCAAT,CAA0CO,cAA1C,EAA0D;AACxD,MAAIC,SAAS,GAAG,SAASA,SAAT,CAAmBC,KAAnB,EAA0BC,QAA1B,EAAoCC,aAApC,EAAmD;AACjE,QAAIC,mBAAmB,GAAGH,KAAK,CAACC,QAAD,CAA/B;;AAEA,QAAI,CAAC,GAAGT,0BAA0B,CAACF,OAA/B,EAAwCa,mBAAxC,CAAJ,EAAkE;AAChE,aAAO,CAAC,GAAGR,uBAAuB,CAACS,2BAA5B,EAAyDH,QAAzD,EAAmEC,aAAnE,EAAkFC,mBAAlF,EAAuGL,cAAvG,CAAP;AACD;;AAED,WAAO,IAAP;AACD,GARD;;AAUA,SAAOC,SAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = responsiveStyleModifierPropTypes;\n\nvar _isResponsiveModifiersProp = _interopRequireDefault(require(\"./utils/isResponsiveModifiersProp\"));\n\nvar _styleModifierPropTypes = require(\"./styleModifierPropTypes\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * TODO: (DEPRECATED) The functionality provided here is now incorporated into\n * `styleModifierPropTypes`. This should be removed before the v2 release.\n */\n\n/**\n * Evaluates the modifiers prop against the modifier config. Throws invalid proptype error\n * if a modifier is supplied in prop and not found in modifier config.\n * @export\n * @param {ModifiersConfig} modifierConfig\n * @returns {Validator<ModifierKeys>}\n */\nfunction responsiveStyleModifierPropTypes(modifierConfig) {\n  var validator = function validator(props, propName, componentName) {\n    var responsiveModifiers = props[propName];\n\n    if ((0, _isResponsiveModifiersProp.default)(responsiveModifiers)) {\n      return (0, _styleModifierPropTypes.validateResponsiveModifiers)(propName, componentName, responsiveModifiers, modifierConfig);\n    }\n\n    return null;\n  };\n\n  return validator;\n}"]},"metadata":{},"sourceType":"script"}